@startuml "C3 Component Diagram"

!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

skinparam Style strictuml

LAYOUT_WITH_LEGEND()

title "Seja UPE - Diagrama de Componentes da API Rest"

Container(MobileApp, "Aplicativo Móvel", "React Native", "Provê aos usuários acesso as funcionalidades a partir do cliente.")
ContainerDb(Database, "Banco de Dados", "RDBMS/SQLite", "Armazena dados dos campi da UPE (Universidade de Pernambuco).")
System(SystemWebsocket, "WebSocket", "É responsável por manter a o envio e recebimento de mensagens dentro do chat.")
System_Ext(SystemEmail, "Sistema de E-mail", "É responsável por enviar os e-mails de boas-vindas ao usuário através do SMTP2GO.")
System_Ext(SystemOAuth2, "Sistema de SSO", "É responsável por possibilitar o usuário realizar login utilizando sua conta Google.")

Container_Boundary(SystemApi, "API REST") {

  Container_Boundary(SystemInterceptors, "Interceptors") {
    Component(CacheInterceptor, "Cache Interceptor", "Nest Interceptor", "")
    Component(ResponseInterceptor, "Response Interceptor", "Nest Interceptor", "")
    Component(TimeoutInterceptor, "Timeout Interceptor", "Nest Interceptor", "")
    Component(VersionInterceptor, "Version Interceptor", "Nest Interceptor", "")
  }

  Container_Boundary(SystemControllers, "Controllers") {
    Component(AuthController, "Authentication Controller", "Nest Controller", "")
    Component(ProfessorController, "Professor Controller", "Nest Controller", "")

    Rel(MobileApp, AuthController, "Makes API calls to", "JSON/HTTP")
    Rel(MobileApp, ProfessorController, "Makes API calls to","JSON/HTTP")
  }

  Container_Boundary(SystemFilters, "Exception Filters") {
    Component(HttpExceptionFilter, "Http Exception Filter", "Nest Filter", "")
    Component(UnhandledErrorFilter, "Unhandled Error Filter", "Nest Filter", "")
  }

  Container_Boundary(SystemGuards, "Guards") {
    Component(AuthorizeGuard, "Authorize Guard", "Nest Guard", "")
    Component(JwtAuthGuard, "Jwt Auth Guard", "Nest Guard", "")
  }

  Container_Boundary(SystemServices, "Services") {
    Component(AuthService, "Auth Service", "Nest Service", "")
    Component(MailerService, "Mailer Service", "Nest Service", "")
    Component(OAuth2Service, "OAuth2 Service", "Nest Service", "")
    Component(ProfessorService, "Professor Service", "Nest Service", "")
    Component(MiningService, "Mining Service", "Nest Service", "")
    
    Rel(AuthController, AuthService, "Uses")
    Rel(ProfessorController, ProfessorService, "Uses")
    Rel(AuthService, MailerService, "Uses")
    Rel(AuthService, OAuth2Service, "Uses")
    Rel(ProfessorService, MiningService, "Uses")
  }

  Container_Boundary(SystemModels, "Models") {
    Component(AuthModel, "Auth Model", "TypeORM Model", "")
    Component(ProfessorModel, "Professor Model", "TypeORM Model", "")

    Rel(AuthService, AuthModel, "Uses")
    Rel(ProfessorService, ProfessorModel, "Uses")
  }

  Rel(MailerService, SystemEmail, "Uses")
  Rel(OAuth2Service, SystemOAuth2, "Uses")
  Rel(SystemApi, SystemWebsocket, "Uses")
  Rel(SystemServices, Database, "Uses")
  Rel(SystemControllers, SystemInterceptors, "Uses")
  Rel(SystemControllers, SystemFilters, "Uses")
  Rel(SystemControllers, SystemGuards, "Uses")

}

@enduml