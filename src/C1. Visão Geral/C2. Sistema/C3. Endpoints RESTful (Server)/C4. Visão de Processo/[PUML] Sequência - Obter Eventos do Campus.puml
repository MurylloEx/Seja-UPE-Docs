@startuml

actor "Usuário"
control "CampusController"
participant "CourseService"
entity "Repository<CampusModel>"
entity "Repository<EventModel>"

"Usuário" -> "CampusController":1.Solicita os eventos de um Campus : onCampusEventsRequested
"CampusController" -> "CourseService":1.1.Consulta os eventos de um Campus : fetchCampusEvents
"CourseService" -> "Repository<CampusModel>":1.1.1.Consulta o Campus pelo identificador especificado : findOne
"Repository<CampusModel>" -->> "CourseService":reply.Retorna o Campus desejado : Promise<CampusModel | null>
"CourseService" -> "CourseService":1.1.2.throw new CampusNotFoundException
"CourseService" -> "Repository<EventModel>":1.1.3.Consulta os eventos do Campus especificado : find
"Repository<EventModel>" -->> "CourseService":reply.Retorna uma lista de eventos referentes ao Campus : Promise<EventModel[]>
"CourseService" -->> "CampusController":reply.Retorna uma lista de eventos referentes ao Campus : Promise<EventModel[]>
"CampusController" -->> "Usuário":reply.Retorna uma lista de eventos referentes ao Campus : EventModel[]

@enduml
