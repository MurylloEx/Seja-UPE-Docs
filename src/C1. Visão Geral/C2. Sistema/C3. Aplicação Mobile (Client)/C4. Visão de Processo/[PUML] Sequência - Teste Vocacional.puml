@startuml

actor "Usuário"
boundary "Suggestions"
boundary "Survey"

"Usuário" -> "Suggestions":1.Acessa a tela de sugestões na Tab "Não sei o que quero"
"Suggestions" -> "Suggestions":1.1.Carrega informações de Campus, Cursos, Professores, etc : useCampusData
"Suggestions" -->> "Suggestions":reply.Carrega todas as informações do Campus contendo os Cursos : Optional<CampusWithCourseResponse>[]
"Suggestions" -->> "Usuário":reply.Carrega todas as informações do Campus contendo os Cursos : Optional<CampusWithCourseResponse>[]
"Usuário" -> "Suggestions":2.Usuário clica no botão "Fazer questionário" : onSurveyButtonClick
"Suggestions" -> "Suggestions":2.1.Navega para a tela Survey: navigate
"Suggestions" ->> "Survey":2.1.1.Tela é carregada de forma assíncrona : componentDidMount
"Survey" -> "Survey":2.1.1.1.Obtém a referência de navegação para navegar a outras telas : useNavigation
"Survey" -->> "Survey":reply.Retorna o objeto de navegação : WelcomeNavigationProp
"Survey" -> "Survey":2.1.1.2.Carrega as cores do tema sendo utilizado atualmente : useTheme
"Survey" -->> "Survey":reply.Retorna o tema usado atualmente e seu respectivo Setter : [ThemeValue, (v: ThemeValue) => void]
"Survey" -> "Survey":2.1.1.3.Cria um Grupo de Radio Buttons para utilizar no questionário : useRadioGroup
"Survey" -->> "Survey":reply.Retorna um grupo de Radio Buttons : RadioGroupHook
"Survey" -> "Survey":2.1.1.4.Obtém as funções Getter e Setter dos resultados do teste vocacional : useSurveyResults
"Survey" -->> "Survey":reply.Retorna o Getter e Setter dos resultados do teste vocacional : SurveyResultsHook
"Usuário" -> "Survey":3.Usuário clica em uma alternativa : onChoiceChanged
"Survey" -->> "Usuário":reply.
"Usuário" -> "Survey":4.Usuário clica em "Avançar" : onSurveyAdvance
"Survey" -> "Survey":4.1.Progresso do questionário é incrementado : setProgress
"Survey" -> "Survey":4.2.Calcula os valores das sugestões dos cursos com base nas respostas : getSurveyResults
"Survey" -->> "Survey":reply.Calcula os valores de respostas e retorna percentuais de indicação de curso : SurveyValue[]
"Survey" -> "Survey":4.3.Define o resultado dos percentuais do teste vocacional : setSurveyResults
"Survey" -> "Survey":4.4.Navega para a tela Suggestions : navigate
"Survey" ->> "Suggestions":4.4.1.Tela é carregada de forma assíncrona : componentDidMount
"Suggestions" -> "Suggestions":4.4.1.1.Detecta o foco na tela : useEnterScreen
"Suggestions" -> "Suggestions":4.4.1.2.Indica que o Teste Vocacional foi concluído : setSurveyDone
"Suggestions" -> "Suggestions":4.4.1.3.Recarrega as informações de Campus e Cursos : useCampusData
"Suggestions" -->> "Suggestions":reply.Retorna os dados dos Campus contendo os cursos e professores : Optional<CampusWithCourseResponse>[]
"Suggestions" -> "Suggestions":4.4.1.4.Obtém os resultados do teste vocacional : useSurveyResults
"Suggestions" -->> "Suggestions":reply.Retorna um objeto contendo um Getter e Setter dos resultados : SurveyResultsHook
"Suggestions" -> "Suggestions":4.4.1.5.Mapeia e exibe todos os cursos encontrados e suas pontuações: map
"Suggestions" -->> "Suggestions":reply.Retorna as fileiras de cursos a serem renderizados : JSX.Element[]

@enduml
